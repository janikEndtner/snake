{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/game/game.component.css","webpack:///./src/app/game/game.component.html","webpack:///./src/app/game/game.component.ts","webpack:///./src/app/item-handler.ts","webpack:///./src/app/snake.ts","webpack:///./src/app/web-socket.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-game></app-game>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport {GameComponent} from './game/game.component';\nimport {WebSocketService} from \"./web-socket.service\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GameComponent,\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [WebSocketService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"svg {\\r\\n  border: 5px solid black;\\r\\n}\\r\\n\"","module.exports = \"<div>\\n  <table>\\n    <tr>\\n      <td>Snake Lenght: </td>\\n      <td>{{snake.getFields().length}}</td>\\n    </tr>\\n  </table>\\n  <button [disabled]=\\\"gameRunning\\\" (click)=\\\"initGame()\\\">Start game</button>\\n</div>\\n<svg [attr.height]=\\\"pxHeight\\\" [attr.width]=\\\"pxWidth\\\">\\n  <g>\\n    <g *ngFor=\\\"let row of fields\\\">\\n      <rect *ngFor=\\\"let field of row\\\"\\n            [attr.width]=\\\"widthOfField\\\"\\n            [attr.height]=\\\"heightOfField\\\"\\n            [attr.stroke]=\\\"fieldStrokeColor\\\"\\n            [attr.fill]=\\\"field.hasItem ? 'red' : 'none'\\\"\\n            [attr.x]=\\\"field.x * widthOfField\\\"\\n            [attr.y]=\\\"field.y * heightOfField\\\"\\n      ></rect>\\n    </g>\\n    <g>\\n      <rect *ngFor=\\\"let field of snake.getFields()\\\"\\n            [attr.width]=\\\"widthOfField\\\"\\n            [attr.height]=\\\"heightOfField\\\"\\n            [attr.stroke]=\\\"fieldStrokeColor\\\"\\n            [attr.fill]=\\\"'black'\\\"\\n            [attr.x]=\\\"field.x * widthOfField\\\"\\n            [attr.y]=\\\"field.y * heightOfField\\\"\\n      ></rect>\\n    </g>\\n  </g>\\n</svg>\\n\"","import {Component, HostListener, OnInit} from '@angular/core';\nimport {Field} from '../field.model';\nimport {Snake} from '../snake';\nimport {ItemHandler} from '../item-handler';\nimport {WebSocketSubject} from \"rxjs/internal/observable/dom/WebSocketSubject\";\nimport {WebSocketService} from \"../web-socket.service\";\nimport {Subject} from \"rxjs\";\n\nexport class Message {\n  constructor(\n    public sender: string,\n    public content: string,\n    public isBroadcast = false,\n  ) { }\n}\n\n@Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.css']\n})\nexport class GameComponent implements OnInit {\n\n  @HostListener('window:keydown', ['$event'])\n    handleKeyDown(event: KeyboardEvent) {\n    this.moveSnake(event);\n  }\n\n  pxWidth: number = 500;\n  pxHeight: number = 500;\n  colNumber: number = 30;\n  rowNumber: number = 30;\n  fields: Field[][] = [];\n  heightOfField: number;\n  widthOfField: number;\n  fieldStrokeColor = \"lightgray\";\n  snake: Snake = null;\n  gameSpeed: number = 100;\n  itemHandler: ItemHandler;\n  gameRunning: boolean = false;\n\n  messages: Subject<any>;\n\n  constructor(\n    private wsService: WebSocketService\n  ) {\n    wsService\n      .connect()\n      .subscribe(d => {\n        console.log(d)\n      })\n  }\n\n  ngOnInit() {\n    this.initGame();\n  }\n\n  initGame() {\n    this.gameRunning = true;\n    this.createFields();\n    this.itemHandler = new ItemHandler(this.fields, this.rowNumber, this.colNumber);\n\n    this.snake = new Snake([\n      {x: 0, y: 0},\n      {x: 1, y: 0},\n      {x: 2, y: 0},\n      {x: 3, y: 0}\n    ], this.itemHandler);\n    this.snake.directionRight();\n    this.startGame();\n  }\n\n  private startGame() {\n    const interval = setInterval(() => {\n      let nextStep = this.snake.getNextStep();\n      if (this.checkIfNextMovePossible(this.snake.getNextStep())) {\n        this.snake.makeStep(this.fields[nextStep.y][nextStep.x]);\n      } else {\n        console.log(this.snake.getNextStep());\n        clearInterval(interval);\n        this.gameRunning = false;\n      }\n    }, this.gameSpeed)\n  }\n\n  private createFields() {\n    for (let i = 0; i < this.colNumber; i++) {\n      this.fields.push([]);\n      for (let j = 0; j < this.rowNumber; j++) {\n        let field: Field = {\n          x: j,\n          y: i\n        };\n        this.fields[this.fields.length - 1].push(field)\n      }\n    }\n    console.log(this.fields);\n    this.heightOfField = this.pxHeight / this.rowNumber;\n    this.widthOfField = this.pxWidth / this.colNumber;\n  }\n\n  private moveSnake(event: KeyboardEvent) {\n    switch (event.key) {\n      case 'ArrowUp':\n        this.snake.directionUp();\n        break;\n      case 'ArrowDown':\n        this.snake.directionDown();\n        break;\n      case 'ArrowRight':\n        this.snake.directionRight();\n        break;\n      case 'ArrowLeft':\n        this.snake.directionLeft();\n        break;\n    }\n  }\n\n  private checkIfNextMovePossible(field: Field) {\n    return field.x >= 0 && field.x < this.colNumber\n    && field.y >= 0 && field.y < this.rowNumber;\n  }\n}\n","import {Field} from './field.model';\n\nexport class ItemHandler {\n  private counter: number;\n  private colNumber: number;\n  private rowNumber: number;\n  private fieldsReference: Field[][];\n  private itemFrequency: number;\n  private previousItemField: Field;\n\n  constructor(field: Field[][], rowNumber: number, colNumber: number) {\n    this.fieldsReference = field;\n    this.rowNumber = rowNumber;\n    this.colNumber = colNumber;\n    this.setItem();\n  }\n\n  private setItem() {\n    let x = Math.floor(Math.random() * this.colNumber);\n    let y = Math.floor(Math.random() * this.rowNumber);\n    this.fieldsReference[x][y].hasItem = true;\n    this.previousItemField = this.fieldsReference[x][y];\n    console.log(`create item on (${x},${y})`)\n  }\n\n  private removeItem() {\n    this.previousItemField.hasItem = false;\n  }\n\n  public replaceItem() {\n    this.removeItem();\n    this.setItem();\n  }\n}\n","import {Field} from './field.model';\nimport {ItemHandler} from './item-handler';\n\nexport class Snake {\n\n  snakeFields: Field[];\n  directionX: number; // could be -1, 0, 1\n  directionY: number; // could be -1, 0, 1\n  itemHandler: ItemHandler;\n\n  constructor(initialFields: Field[], itemHandler: ItemHandler) {\n    this.snakeFields = initialFields;\n    this.itemHandler = itemHandler;\n  }\n  public directionUp() {\n    this.directionX = 0;\n    this.directionY = -1;\n  }\n  public directionDown() {\n    this.directionX = 0;\n    this.directionY = 1;\n  }\n  public directionRight() {\n    this.directionX = 1;\n    this.directionY = 0;\n  }\n  public directionLeft() {\n    this.directionX = -1;\n    this.directionY = 0;\n  }\n  public getNextStep(): Field {\n    let newX = this.snakeFields[0].x + this.directionX;\n    let newY = this.snakeFields[0].y + this.directionY;\n    return {\n      x: newX,\n      y: newY,\n    }\n  }\n  public makeStep(field: Field) {\n    this.snakeFields.unshift(field);\n    if (!field.hasItem) {\n      this.snakeFields.pop();\n    } else {\n      this.itemHandler.replaceItem();\n    }\n  }\n  public getFields(): Field[] {\n    return this.snakeFields;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport * as io from 'socket.io-client';\nimport { Observable } from 'rxjs';\nimport * as Rx from 'rxjs';\nimport {environment} from \"../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebSocketService {\n\n  // Our socket connection\n  private socket;\n\n  constructor() { }\n\n  connect(): Observable<any> {\n    // If you aren't familiar with environment variables then\n    // you can hard code `environment.ws_url` as `http://localhost:5000`\n    this.socket = io('http://localhost:3000');\n\n    // We define our observable which will observe any incoming messages\n    // from our socket.io server.\n    let observable = new Observable(observer => {\n      this.socket.on('message', (data) => {\n        console.log(\"Received message from Websocket Server\");\n        observer.next(data);\n      });\n      return () => {\n        this.socket.disconnect();\n      }\n    });\n\n    // We define our Observer which will listen to messages\n    // from our other components and send messages back to our\n    // socket server whenever the `next()` method is called.\n    let observer = {\n      next: (data: Object) => {\n        this.socket.emit('message', JSON.stringify(data));\n      },\n    };\n\n    return observable;\n\n    // we return our Rx.Subject which is a combination\n    // of both an observer and observable.\n    // return Rx.Subject.create(observer, observable);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","/* (ignored) */"],"sourceRoot":""}