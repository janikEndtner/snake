{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/game/game.component.css","webpack:///./src/app/game/game.component.html","webpack:///./src/app/game/game.component.ts","webpack:///./src/app/web-socket.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-game></app-game>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport {GameComponent} from './game/game.component';\nimport {WebSocketService} from \"./web-socket.service\";\nimport {HttpClient, HttpClientModule} from \"@angular/common/http\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GameComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule\n  ],\n  providers: [WebSocketService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"svg {\\r\\n  border: 5px solid black;\\r\\n}\\r\\n\"","module.exports = \"<div>\\n  <table>\\n    <tr>\\n      <td>Snake Lenght: </td>\\n      <!--<td>{{snake.getFields().length}}</td>-->\\n    </tr>\\n  </table>\\n  <button (click)=\\\"startGame()\\\">Start game</button>\\n</div>\\n<svg [attr.height]=\\\"pxHeight\\\" [attr.width]=\\\"pxWidth\\\">\\n  <g>\\n    <g *ngFor=\\\"let row of fields\\\">\\n      <rect *ngFor=\\\"let field of row\\\"\\n            [attr.width]=\\\"widthOfField\\\"\\n            [attr.height]=\\\"heightOfField\\\"\\n            [attr.stroke]=\\\"fieldStrokeColor\\\"\\n            [attr.fill]=\\\"getColor(field)\\\"\\n            [attr.x]=\\\"field.x * widthOfField\\\"\\n            [attr.y]=\\\"field.y * heightOfField\\\"\\n      ></rect>\\n    </g>\\n  </g>\\n</svg>\\n\"","import {Component, HostListener, OnInit} from '@angular/core';\nimport {Field} from '../../../../shared/field.model';\nimport {WebSocketService} from \"../web-socket.service\";\nimport {Subject} from \"rxjs\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {environment} from \"../../environments/environment\";\n\n@Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.css']\n})\nexport class GameComponent implements OnInit {\n\n  @HostListener('window:keydown', ['$event'])\n    handleKeyDown(event: KeyboardEvent) {\n    this.moveSnake(event);\n  }\n\n  pxWidth: number = 500;\n  pxHeight: number = 500;\n  fields: Field[][] = [];\n  heightOfField: number;\n  widthOfField: number;\n  fieldStrokeColor = \"lightgray\";\n\n  messages: Subject<any>;\n\n  constructor(\n    private wsService: WebSocketService,\n    private http: HttpClient\n  ) {}\n\n  ngOnInit() {\n    this.initGame();\n  }\n\n  private initGame() {\n    this.http.post(environment.api + 'game/initGame', {})\n      .subscribe((data:Field[][]) => {\n        this.createBoard(data);\n      }, error1 => {\n        console.log(error1);\n        alert('an error occured. See console for more information');\n      })\n\n  }\n\n  startGame() {\n    this.wsService\n      .connect();\n    this.wsService.send('startGame', null);\n    this.wsService.getSteps()\n      .subscribe(d => {\n        if (d.changes) {\n          this.doChanges(d.changes);\n        }\n      });\n  }\n\n  private createBoard(board: Field[][]) {\n    this.fields = board;\n    this.heightOfField = this.pxHeight/board.length;\n    this.widthOfField = this.pxWidth/board[0].length;\n  }\n\n\n  private doChanges(changes: Field[]) {\n    changes.forEach(d => {\n      this.fields[d.y][d.x] = d;\n    })\n  }\n\n  private moveSnake(event: KeyboardEvent) {\n    switch (event.key) {\n      case 'ArrowUp':\n        this.wsService.send('changeDirection', {direction: 'up'});\n        break;\n      case 'ArrowDown':\n        this.wsService.send('changeDirection', {direction: 'down'});\n        break;\n      case 'ArrowRight':\n        this.wsService.send('changeDirection', {direction: 'right'});\n        break;\n      case 'ArrowLeft':\n        this.wsService.send('changeDirection', {direction: 'left'});\n        break;\n    }\n  }\n\n  getColor(field) {\n    if (field.hasSnake) {\n      return 'black';\n    } else if (field.hasItem) {\n      return 'red'\n    } else {\n      return 'none';\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport * as io from 'socket.io-client';\nimport {Observable} from 'rxjs';\nimport {Field} from \"../../../shared/field.model\";\nimport {environment} from \"../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebSocketService {\n\n  // Our socket connection\n  private socket;\n\n  constructor() { }\n\n  connect(): void {\n    this.socket = io(environment.api);\n  }\n\n  getSteps(): Observable<{board: Field[][], changes: Field[]}> {\n    return new Observable(observer => {\n      this.socket.on('step', (data) => {\n        console.log(\"Received message from Websocket Server\");\n        observer.next(data);\n      });\n      return () => {\n        this.socket.disconnect();\n      }\n    });\n  }\n\n  send(eventName: string, data: Object) {\n    this.socket.emit(eventName, JSON.stringify(data));\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  api: 'http://localhost:3000/'\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","/* (ignored) */"],"sourceRoot":""}